name: Java CI with Maven

on:
  push:
    branches:
      - main    # Déclencher lors des commits sur la branche principale (main)
  pull_request:
    branches:
      - main    # Déclencher lors d'une PR vers la branche principale

jobs:
  build:
    runs-on: ubuntu-latest  # Utilise un environnement Linux (Ubuntu) pour l'exécution

    steps:
    - name: Checkout code
      uses: actions/checkout@v3   # Récupère le code source du repository

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'   # Utilise la version JDK 21

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository  # Cache les dépendances Maven pour accélérer les futures builds
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}  # Clé basée sur les fichiers pom.xml
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install -DskipTests=true  # Compile et installe les dépendances sans lancer les tests

    - name: Run tests
      run: mvn test   # Exécute les tests unitaires du projet

    - name: Build Docker image
      run: mvn spring-boot:build-image  # Crée l'image Docker du projet Spring Boot (si applicable)

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: spring-boot-artifact
        path: target/*.jar   # Télécharge l'artefact JAR du projet
